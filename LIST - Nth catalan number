************************QUESTION*****************************
Given a number N. The task is to find the Nth catalan number.
The first few Catalan numbers for N = 0, 1, 2, 3, … are 1, 1, 2, 5, 14, 42, 132, 429, 1430, 4862, …
Note: Positions start from 0 as shown above.

Example 1:

Input:
N = 5
Output: 42
Example 2:

Input:
N = 4
Output: 14
Your Task:
Complete findCatalan() function that takes n as an argument and returns the Nth Catalan number. The output is printed by the driver code.

Expected Time Complexity: O(N).
Expected Auxiliary Space: O(N).

Constraints:
1 <= N <= 100
**********************************************************
class Solution:
    #Function to find the nth catalan number.
    def findCatalan(self,n):
        #return the nth Catalan number.
        dp = [0]*(n+1)
        def recurse(i):
            if i==0:
                dp[i] = 1
                return 1
            if dp[i]!=0:
                return dp[i]
            for j in range(1,i+1):                          # SINCE SUMMATION HAS TO TAKE PLACE, IT IS BETTER TO ITERATE FOR EACH NUMBER; TAKEN AS A SUB-PROBLEM
                dp[i] = dp[i] + (recurse(j-1)*recurse(i-j))
            return dp[i]
        t = recurse(n)
        return dp[n]
